name: Performance Monitoring

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run performance check daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  performance-baseline:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run TypeScript check
      run: npm run typecheck
      
    - name: Run performance CI check
      run: npm run perf:ci
      continue-on-error: true
      
    - name: Generate performance report
      run: |
        npm run build
        npm run perf:bench || echo "Benchmarks completed with warnings"
        
    - name: Bundle size analysis
      run: |
        echo "## Bundle Size Analysis" >> $GITHUB_STEP_SUMMARY
        echo "| Asset | Size | Status |" >> $GITHUB_STEP_SUMMARY  
        echo "|-------|------|--------|" >> $GITHUB_STEP_SUMMARY
        cd dist/assets
        for file in *.js; do
          size=$(du -h "$file" | cut -f1)
          echo "| $file | $size | ✅ |" >> $GITHUB_STEP_SUMMARY
        done
        for file in *.css; do
          size=$(du -h "$file" | cut -f1)  
          echo "| $file | $size | ✅ |" >> $GITHUB_STEP_SUMMARY
        done
        
    - name: Upload performance artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: performance-reports
        path: |
          performance/reports/
          dist/assets/
        retention-days: 30

  lighthouse-audit:
    runs-on: ubuntu-latest
    needs: performance-baseline
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Install Lighthouse CI
      run: npm install -g @lhci/cli@0.12.x
      
    - name: Run Lighthouse CI
      run: npm run lighthouse:ci || echo "Lighthouse completed with warnings"
      continue-on-error: true
      
    - name: Upload Lighthouse artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lighthouse-reports
        path: performance/reports/lighthouse/
        retention-days: 30

  performance-regression:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check for performance regressions
      run: |
        npm run build
        CURRENT_SIZE=$(du -sb dist/ | cut -f1)
        echo "Current build size: $CURRENT_SIZE bytes"
        
        # Compare with baseline (rough estimation)
        BASELINE_SIZE=320000  # ~312KB baseline
        THRESHOLD=1.1  # 10% increase threshold
        
        if [ "$CURRENT_SIZE" -gt "$(echo "$BASELINE_SIZE * $THRESHOLD" | bc -l | cut -d. -f1)" ]; then
          echo "⚠️ Bundle size regression detected!" >> $GITHUB_STEP_SUMMARY
          echo "Current: $(($CURRENT_SIZE / 1024))KB vs Baseline: $(($BASELINE_SIZE / 1024))KB" >> $GITHUB_STEP_SUMMARY
        else
          echo "✅ Bundle size within acceptable range" >> $GITHUB_STEP_SUMMARY
        fi
        
    - name: Comment PR with performance impact
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          // Read current bundle sizes
          const distPath = './dist/assets';
          let bundleInfo = '## 📊 Performance Impact\n\n';
          
          try {
            const files = fs.readdirSync(distPath);
            bundleInfo += '| Asset | Size |\n|-------|------|\n';
            
            files.filter(f => f.endsWith('.js') || f.endsWith('.css')).forEach(file => {
              const stats = fs.statSync(`${distPath}/${file}`);
              const sizeKB = Math.round(stats.size / 1024);
              bundleInfo += `| ${file} | ${sizeKB}KB |\n`;
            });
            
            bundleInfo += '\n✅ Performance check completed. See artifacts for detailed reports.';
          } catch (e) {
            bundleInfo += 'Bundle analysis not available.';
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: bundleInfo
          });