{"version":3,"file":"components-Dq2CPLEW.js","sources":["../../node_modules/react/jsx-runtime.js","../../node_modules/react/cjs/react-jsx-runtime.production.js","../../src/components/AgentSheet.tsx","../../src/data/quests.ts","../../src/components/QuestBoard.tsx","../../src/components/LevelUpNotification.tsx"],"sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nfunction jsxProd(type, config, maybeKey) {\n  var key = null;\n  void 0 !== maybeKey && (key = \"\" + maybeKey);\n  void 0 !== config.key && (key = \"\" + config.key);\n  if (\"key\" in config) {\n    maybeKey = {};\n    for (var propName in config)\n      \"key\" !== propName && (maybeKey[propName] = config[propName]);\n  } else maybeKey = config;\n  config = maybeKey.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== config ? config : null,\n    props: maybeKey\n  };\n}\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsxProd;\nexports.jsxs = jsxProd;\n","import { Agent } from '../types/agent';\n\ninterface AgentSheetProps {\n  agent: Agent;\n  onClose: () => void;\n  onAgentUpdate?: (agent: Agent) => void;\n  onMissionAssign?: (agent: Agent) => void;\n}\n\nexport default function AgentSheet({ agent, onClose, onMissionAssign }: AgentSheetProps) {\n  const renderStatBar = (value: number, max: number = 100, color: string) => {\n    const safeBoundedValue = Math.max(0, Math.min(max, isNaN(value) ? 0 : value));\n    return (\n      <div className=\"w-full bg-slate-700 rounded-full h-2\">\n        <div \n          className={`h-2 rounded-full transition-all duration-500 ${color}`}\n          style={{ width: `${(safeBoundedValue / max) * 100}%` }}\n        />\n      </div>\n    );\n  };\n\n  const renderSkillTree = () => {\n    const skillTree = agent.skillTree || {};\n    return (\n      <div className=\"space-y-4\">\n        <h3 className=\"text-lg font-semibold flex items-center\">\n          üåü Skill Tree\n        </h3>\n        <div className=\"grid gap-3\">\n          {Object.entries(skillTree).length > 0 ? (\n            Object.entries(skillTree).map(([skillName, skill]) => {\n              if (!skill || typeof skill !== 'object') return null;\n              return (\n                <div key={skillName} className=\"bg-slate-800/50 p-3 rounded-lg\">\n                  <div className=\"flex justify-between items-center mb-2\">\n                    <span className=\"font-medium\">{skillName}</span>\n                    <span className=\"text-sm text-slate-400\">\n                      {skill.level || 0}/{skill.maxLevel || 10}\n                    </span>\n                  </div>\n                  {renderStatBar(skill.level || 0, skill.maxLevel || 10, 'bg-gradient-to-r from-purple-500 to-cyan-500')}\n                  {skill.recentProgress && (\n                    <div className=\"text-xs text-green-400 mt-1\">\n                      {skill.recentProgress}\n                    </div>\n                  )}\n                </div>\n              );\n            }).filter(Boolean)\n          ) : (\n            <div className=\"text-sm text-slate-400 italic\">No skills unlocked yet</div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  const renderKnowledgeBase = () => {\n    const knowledgeBase = agent.knowledgeBase || {};\n    const totalMemories = knowledgeBase.totalMemories || 0;\n    const recentLearning = knowledgeBase.recentLearning || 'No recent learning';\n    const domains = knowledgeBase.knowledgeDomains || {};\n    const crawlingProgress = knowledgeBase.crawlingProgress || { active: false, lastUrl: null };\n\n    return (\n      <div className=\"space-y-4\">\n        <h3 className=\"text-lg font-semibold flex items-center\">\n          üß† Knowledge Base\n          <span className=\"ml-2 text-sm bg-cyan-500/20 text-cyan-300 px-2 py-1 rounded\">\n            {totalMemories} memories\n          </span>\n        </h3>\n        \n        <div className=\"bg-slate-800/50 p-3 rounded-lg\">\n          <div className=\"text-sm text-slate-400 mb-1\">Recent Learning:</div>\n          <div className=\"text-cyan-300\">{recentLearning}</div>\n        </div>\n        \n        <div className=\"space-y-2\">\n          <div className=\"text-sm font-medium\">Domain Expertise:</div>\n          {Object.entries(domains).length > 0 ? (\n            Object.entries(domains).map(([domain, level]) => (\n              <div key={domain} className=\"flex items-center justify-between\">\n                <span className=\"text-sm capitalize\">{domain.replace('_', ' ')}</span>\n                <div className=\"flex items-center space-x-2\">\n                  <div className=\"w-20\">\n                    {renderStatBar(level as number, 100, 'bg-gradient-to-r from-blue-500 to-purple-500')}\n                  </div>\n                  <span className=\"text-xs text-slate-400 w-8\">{level}</span>\n                </div>\n              </div>\n            ))\n          ) : (\n            <div className=\"text-sm text-slate-400 italic\">No domain expertise recorded</div>\n          )}\n        </div>\n        \n        {crawlingProgress.active ? (\n          <div className=\"bg-green-500/20 border border-green-500/50 p-3 rounded-lg\">\n            <div className=\"text-green-400 text-sm font-medium mb-1\">üîÑ Currently crawling</div>\n            <div className=\"text-xs text-green-300\">\n              {crawlingProgress.currentUrl || crawlingProgress.lastUrl}\n            </div>\n            <div className=\"text-xs text-slate-400 mt-1\">\n              {crawlingProgress.pagesLearned || 0} pages learned\n            </div>\n          </div>\n        ) : (\n          <div className=\"bg-slate-700/50 border border-slate-600/50 p-3 rounded-lg\">\n            <div className=\"text-slate-400 text-sm font-medium mb-1\">üìö Last crawled</div>\n            <div className=\"text-xs text-slate-300\">\n              {crawlingProgress.lastUrl || 'No recent crawling activity'}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const renderEquipment = () => {\n    const equipment = agent.equipment || {};\n    return (\n      <div className=\"space-y-4\">\n        <h3 className=\"text-lg font-semibold flex items-center\">\n          ‚öîÔ∏è Equipment\n        </h3>\n        <div className=\"space-y-3\">\n          <div className=\"bg-slate-800/50 p-3 rounded-lg\">\n            <div className=\"text-sm text-purple-400 font-medium mb-1\">Primary Tool</div>\n            <div className=\"text-sm\">{equipment.primary || 'None equipped'}</div>\n          </div>\n          <div className=\"bg-slate-800/50 p-3 rounded-lg\">\n            <div className=\"text-sm text-cyan-400 font-medium mb-1\">Secondary Tool</div>\n            <div className=\"text-sm\">{equipment.secondary || 'None equipped'}</div>\n          </div>\n          <div className=\"bg-slate-800/50 p-3 rounded-lg\">\n            <div className=\"text-sm text-green-400 font-medium mb-1\">Utility Item</div>\n            <div className=\"text-sm\">{equipment.utility || 'None equipped'}</div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const renderRelationships = () => {\n    const relationships = agent.relationships || [];\n    return (\n      <div className=\"space-y-4\">\n        <h3 className=\"text-lg font-semibold flex items-center\">\n          üë• Relationships\n        </h3>\n        {relationships.length === 0 ? (\n          <div className=\"text-sm text-slate-400 italic\">No active relationships</div>\n        ) : (\n          <div className=\"space-y-3\">\n            {relationships.map((rel, idx) => (\n              <div key={idx} className=\"bg-slate-800/50 p-3 rounded-lg\">\n                <div className=\"flex justify-between items-start mb-2\">\n                  <span className=\"text-sm font-medium\">Agent #{rel.agentId}</span>\n                  <div className=\"flex items-center space-x-2\">\n                    <span className={`text-xs px-2 py-1 rounded ${\n                      rel.type === 'mentor' ? 'bg-purple-500/20 text-purple-300' :\n                      rel.type === 'apprentice' ? 'bg-green-500/20 text-green-300' :\n                      'bg-blue-500/20 text-blue-300'\n                    }`}>\n                      {rel.type}\n                    </span>\n                    <span className=\"text-xs text-slate-400\">{rel.strength}</span>\n                  </div>\n                </div>\n                <div className=\"text-xs text-slate-400\">\n                  Recent: {rel.recentInteraction}\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center p-4 z-50\">\n      <div \n        className=\"glass-panel max-w-4xl w-full max-h-[90vh] overflow-y-auto\"\n        aria-label={`Agent details for ${agent.name}`}\n        role=\"dialog\"\n        aria-modal=\"true\"\n      >\n        <div className=\"p-6\">\n          {/* Header */}\n          <div className=\"flex items-center justify-between mb-6\">\n            <div className=\"flex items-center space-x-4\">\n              <span className=\"text-4xl\" role=\"img\" aria-label={`${agent.name} avatar`}>{agent.avatar}</span>\n              <div>\n                <h2 className=\"text-2xl font-bold\">{agent.name}</h2>\n                <p className=\"text-lg text-purple-300\">{agent.class}</p>\n                <p className=\"text-sm text-slate-400 italic\">{agent.personality}</p>\n              </div>\n            </div>\n            <button\n              onClick={onClose}\n              tabIndex={2}\n              className=\"text-slate-400 hover:text-white text-xl p-2 focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-slate-800 rounded\"\n              aria-label=\"Close agent details\"\n            >\n              ‚úï\n            </button>\n          </div>\n\n          {/* Stats Overview */}\n          <div className=\"grid grid-cols-2 lg:grid-cols-5 gap-4 mb-8\">\n            {[\n              { key: 'intelligence', label: 'Intelligence', value: agent.stats.intelligence, color: 'text-blue-400' },\n              { key: 'creativity', label: 'Creativity', value: agent.stats.creativity, color: 'text-purple-400' },\n              { key: 'reliability', label: 'Reliability', value: agent.stats.reliability, color: 'text-green-400' },\n              { key: 'speed', label: 'Speed', value: agent.stats.speed, color: 'text-yellow-400' },\n              { key: 'leadership', label: 'Leadership', value: agent.stats.leadership, color: 'text-red-400' }\n            ].map(stat => {\n              const safeValue = isNaN(stat.value) ? 0 : stat.value;\n              return (\n                <div key={stat.key} className=\"bg-slate-800/50 p-4 rounded-lg text-center\">\n                  <div className={`text-2xl font-bold ${stat.color}`}>{safeValue}</div>\n                  <div className=\"text-sm text-slate-400\">{stat.label}</div>\n                  <div className=\"mt-2\">\n                    {renderStatBar(safeValue, 100, `bg-gradient-to-r from-${stat.color.split('-')[1]}-500 to-${stat.color.split('-')[1]}-400`)}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n\n          {/* Level & XP */}\n          <div className=\"bg-slate-800/50 p-4 rounded-lg mb-8\">\n            <div className=\"flex justify-between items-center mb-2\">\n              <span className=\"font-semibold\">Level {agent.level}</span>\n              <span className=\"text-sm text-slate-400\">{agent.xp} / {agent.xpToNext} XP</span>\n            </div>\n            <div className=\"xp-bar\" data-testid=\"xp-bar\" data-agent-id={agent.id}>\n              <div \n                className=\"xp-progress\" \n                role=\"progressbar\"\n                aria-valuenow={agent.xp}\n                aria-valuemin={0}\n                aria-valuemax={agent.xpToNext}\n                aria-label={`${agent.name} experience progress`}\n                style={{ width: `${(agent.xp / agent.xpToNext) * 100}%` }}\n              />\n            </div>\n          </div>\n\n          {/* Specializations */}\n          <div className=\"mb-8\">\n            <h3 className=\"text-lg font-semibold mb-3\">üéØ Specializations</h3>\n            <div className=\"flex flex-wrap gap-2\">\n              {agent.specializations.map((spec, idx) => (\n                <span key={idx} className=\"bg-purple-500/20 text-purple-300 px-3 py-1 rounded-full text-sm\">\n                  {spec}\n                </span>\n              ))}\n            </div>\n          </div>\n\n          {/* Current Mission */}\n          <div className=\"mb-8\">\n            <h3 className=\"text-lg font-semibold mb-3\">üìã Current Mission</h3>\n            <div className=\"bg-slate-800/50 p-4 rounded-lg flex justify-between items-center\">\n              <span className={`text-lg ${\n                agent.currentMission === 'Available for Mission' \n                  ? 'text-green-400' \n                  : 'text-cyan-400'\n              }`}>\n                {agent.currentMission}\n              </span>\n              {onMissionAssign && (\n                <button\n                  onClick={() => onMissionAssign(agent)}\n                  disabled={agent.currentMission !== 'Available for Mission'}\n                  tabIndex={1}\n                  className={`px-4 py-2 rounded-lg transition-colors ${\n                    agent.currentMission === 'Available for Mission'\n                      ? 'bg-green-600 hover:bg-green-500 text-white'\n                      : 'bg-slate-600 text-slate-400 cursor-not-allowed'\n                  }`}\n                  aria-label=\"Assign Mission\"\n                >\n                  Assign Mission\n                </button>\n              )}\n            </div>\n          </div>\n\n          {/* Main Content Grid */}\n          <div className=\"grid lg:grid-cols-2 gap-8\">\n            <div className=\"space-y-8\">\n              {renderKnowledgeBase()}\n              {renderEquipment()}\n            </div>\n            <div className=\"space-y-8\">\n              {renderSkillTree()}\n              {renderRelationships()}\n            </div>\n          </div>\n\n          {/* Recent Activity */}\n          <div className=\"mt-8\">\n            <h3 className=\"text-lg font-semibold mb-4\">‚ö° Recent Activity</h3>\n            <div className=\"space-y-3 max-h-48 overflow-y-auto\">\n              {agent.realtimeActivity && agent.realtimeActivity.length > 0 ? (\n                agent.realtimeActivity.map((activity, idx) => (\n                  <div key={idx} className=\"bg-slate-800/30 p-3 rounded-lg\">\n                    <div className=\"flex justify-between items-start\">\n                      <div className=\"flex-1\">\n                        <div className=\"text-sm\">{activity.action}</div>\n                        <div className=\"text-xs text-slate-400 mt-1\">{activity.timestamp}</div>\n                      </div>\n                      <div className=\"flex flex-col items-end space-y-1\">\n                        {activity.xpGained && (\n                          <span className=\"text-xs text-green-400\">+{activity.xpGained} XP</span>\n                        )}\n                        {activity.synergy && (\n                          <span className=\"text-xs text-purple-400\">{activity.synergy}</span>\n                        )}\n                        {activity.confidence && (\n                          <span className=\"text-xs text-cyan-400\">{activity.confidence}</span>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                ))\n              ) : (\n                <div className=\"text-sm text-slate-400 italic p-3 bg-slate-800/30 rounded-lg\">\n                  No recent activity\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","// Quest data for Agent Company RPG\nimport { Quest } from '../types/quest';\n\nexport const initialQuests: Quest[] = [\n  // Tutorial Quest\n  {\n    id: 'quest_001',\n    title: 'Welcome to the Guild',\n    description: 'Learn the basics of agent management and complete your first mission.',\n    lore: 'Every great journey begins with a single step. The Guild Master awaits your arrival.',\n    type: 'main',\n    category: 'Training',\n    difficulty: 'Tutorial',\n    status: 'available',\n    icon: 'üìö',\n    \n    objectives: [\n      {\n        id: 'obj_001_1',\n        description: 'Report to the Guild Master',\n        completed: false,\n        progress: 0,\n        maxProgress: 1\n      },\n      {\n        id: 'obj_001_2',\n        description: 'Assign an agent to a task',\n        completed: false,\n        progress: 0,\n        maxProgress: 1\n      },\n      {\n        id: 'obj_001_3',\n        description: 'Complete your first knowledge crawl',\n        completed: false,\n        progress: 0,\n        maxProgress: 1\n      }\n    ],\n    currentObjectiveIndex: 0,\n    progressPercentage: 0,\n    \n    requirements: {\n      minLevel: 1\n    },\n    \n    rewards: {\n      xp: 100,\n      gold: 50,\n      items: ['Apprentice Badge'],\n      unlocks: ['Basic Quests']\n    },\n    \n    assignedAgents: [],\n    recommendedTeamSize: 1,\n    autoAssign: false,\n    dialogue: [],\n    \n    createdAt: new Date(),\n    repeatable: false\n  },\n  \n  // Main Story Quest\n  {\n    id: 'quest_002',\n    title: 'The Lost Algorithm',\n    description: 'Investigate the mysterious disappearance of a critical optimization algorithm.',\n    lore: 'Ancient code fragments have been discovered, pointing to a legendary algorithm that could revolutionize agent efficiency.',\n    type: 'main',\n    category: 'Investigation',\n    difficulty: 'Medium',\n    status: 'available',\n    icon: 'üîç',\n    \n    objectives: [\n      {\n        id: 'obj_002_1',\n        description: 'Analyze the code fragments',\n        completed: false,\n        progress: 0,\n        maxProgress: 3\n      },\n      {\n        id: 'obj_002_2',\n        description: 'Interview veteran agents about the algorithm',\n        completed: false,\n        progress: 0,\n        maxProgress: 5\n      },\n      {\n        id: 'obj_002_3',\n        description: 'Search the archived repositories',\n        completed: false,\n        progress: 0,\n        maxProgress: 10\n      },\n      {\n        id: 'obj_002_4',\n        description: 'Reconstruct the algorithm',\n        completed: false,\n        progress: 0,\n        maxProgress: 1,\n        optional: true\n      }\n    ],\n    currentObjectiveIndex: 0,\n    progressPercentage: 0,\n    timeLimit: 120,\n    \n    requirements: {\n      minLevel: 5,\n      requiredClass: ['Code Analyst', 'Data Sage'],\n      requiredSkills: [\n        { skill: 'Code Analysis', level: 3 },\n        { skill: 'Data Mining', level: 2 }\n      ]\n    },\n    \n    rewards: {\n      xp: 500,\n      gold: 200,\n      items: ['Algorithm Fragment', 'Sage Robe'],\n      skillPoints: 2,\n      reputation: [{ faction: 'Code Keepers', amount: 50 }]\n    },\n    \n    bonusRewards: {\n      xp: 200,\n      items: ['Complete Algorithm Scroll'],\n      reputation: [{ faction: 'Code Keepers', amount: 25 }]\n    },\n    \n    assignedAgents: [],\n    recommendedTeamSize: 3,\n    autoAssign: false,\n    dialogue: [],\n    \n    createdAt: new Date(),\n    repeatable: false,\n    githubIssue: '#102',\n    knowledgeRequired: ['Algorithms', 'Data Structures', 'Legacy Systems']\n  },\n  \n  // Epic Raid Quest\n  {\n    id: 'quest_003',\n    title: 'The Data Breach Crisis',\n    description: 'A massive data breach threatens the entire network. Assemble your best team!',\n    lore: 'Dark agents have infiltrated the core systems. Time is of the essence.',\n    type: 'raid',\n    category: 'Combat',\n    difficulty: 'Expert',\n    status: 'available',\n    icon: '‚öîÔ∏è',\n    \n    objectives: [\n      {\n        id: 'obj_003_1',\n        description: 'Identify breach points',\n        completed: false,\n        progress: 0,\n        maxProgress: 5\n      },\n      {\n        id: 'obj_003_2',\n        description: 'Deploy security patches',\n        completed: false,\n        progress: 0,\n        maxProgress: 10\n      },\n      {\n        id: 'obj_003_3',\n        description: 'Trace the attackers',\n        completed: false,\n        progress: 0,\n        maxProgress: 3\n      },\n      {\n        id: 'obj_003_4',\n        description: 'Neutralize the threat',\n        completed: false,\n        progress: 0,\n        maxProgress: 1\n      }\n    ],\n    currentObjectiveIndex: 0,\n    progressPercentage: 0,\n    timeLimit: 60,\n    \n    requirements: {\n      minLevel: 10,\n      teamSize: { min: 4, max: 8 },\n      requiredSkills: [\n        { skill: 'Cybersecurity', level: 5 },\n        { skill: 'Rapid Response', level: 4 }\n      ]\n    },\n    \n    rewards: {\n      xp: 1500,\n      gold: 1000,\n      items: ['Elite Security Badge', 'Firewall Enhancement', 'Legendary Cipher'],\n      skillPoints: 5,\n      reputation: [\n        { faction: 'Security Council', amount: 100 },\n        { faction: 'Guild Alliance', amount: 75 }\n      ],\n      unlocks: ['Elite Raids', 'Security Specialization']\n    },\n    \n    assignedAgents: [],\n    recommendedTeamSize: 6,\n    autoAssign: false,\n    dialogue: [],\n    \n    createdAt: new Date(),\n    repeatable: true,\n    cooldownHours: 168, // Weekly raid\n    swarmTaskId: 'swarm_raid_001'\n  },\n  \n  // Daily Quest\n  {\n    id: 'quest_004',\n    title: 'Documentation Patrol',\n    description: 'Update and maintain project documentation.',\n    type: 'daily',\n    category: 'Creation',\n    difficulty: 'Easy',\n    status: 'available',\n    icon: 'üìù',\n    \n    objectives: [\n      {\n        id: 'obj_004_1',\n        description: 'Review existing documentation',\n        completed: false,\n        progress: 0,\n        maxProgress: 5\n      },\n      {\n        id: 'obj_004_2',\n        description: 'Update outdated sections',\n        completed: false,\n        progress: 0,\n        maxProgress: 3\n      },\n      {\n        id: 'obj_004_3',\n        description: 'Add new examples',\n        completed: false,\n        progress: 0,\n        maxProgress: 2,\n        optional: true\n      }\n    ],\n    currentObjectiveIndex: 0,\n    progressPercentage: 0,\n    \n    requirements: {\n      minLevel: 2\n    },\n    \n    rewards: {\n      xp: 150,\n      gold: 50,\n      items: ['Documentation Token'],\n      reputation: [{ faction: 'Scribes Guild', amount: 10 }]\n    },\n    \n    bonusRewards: {\n      xp: 50,\n      items: ['Quality Seal']\n    },\n    \n    assignedAgents: [],\n    recommendedTeamSize: 1,\n    autoAssign: true,\n    dialogue: [],\n    \n    createdAt: new Date(),\n    repeatable: true,\n    cooldownHours: 24\n  },\n  \n  // Side Quest - Exploration\n  {\n    id: 'quest_005',\n    title: 'The Uncharted Repository',\n    description: 'Explore a newly discovered open-source repository and catalog its treasures.',\n    type: 'side',\n    category: 'Exploration',\n    difficulty: 'Medium',\n    status: 'available',\n    icon: 'üó∫Ô∏è',\n    \n    objectives: [\n      {\n        id: 'obj_005_1',\n        description: 'Clone and analyze the repository',\n        completed: false,\n        progress: 0,\n        maxProgress: 1\n      },\n      {\n        id: 'obj_005_2',\n        description: 'Document useful functions',\n        completed: false,\n        progress: 0,\n        maxProgress: 10\n      },\n      {\n        id: 'obj_005_3',\n        description: 'Test integration possibilities',\n        completed: false,\n        progress: 0,\n        maxProgress: 5\n      },\n      {\n        id: 'obj_005_4',\n        description: 'Create a fork with improvements',\n        completed: false,\n        progress: 0,\n        maxProgress: 1,\n        optional: true\n      }\n    ],\n    currentObjectiveIndex: 0,\n    progressPercentage: 0,\n    \n    requirements: {\n      minLevel: 4,\n      requiredSkills: [\n        { skill: 'Repository Navigation', level: 2 },\n        { skill: 'Code Review', level: 3 }\n      ]\n    },\n    \n    rewards: {\n      xp: 300,\n      gold: 150,\n      items: ['Explorer Badge', 'Repository Map'],\n      skillPoints: 1\n    },\n    \n    bonusRewards: {\n      xp: 100,\n      items: ['Fork Master Trophy'],\n      reputation: [{ faction: 'Open Source Alliance', amount: 30 }]\n    },\n    \n    assignedAgents: [],\n    recommendedTeamSize: 2,\n    autoAssign: false,\n    dialogue: [],\n    \n    createdAt: new Date(),\n    repeatable: false\n  },\n  \n  // Epic Quest Chain\n  {\n    id: 'quest_006',\n    title: 'The Architect\\'s Legacy',\n    description: 'Uncover the secrets of the legendary System Architect.',\n    lore: 'Tales speak of an architect who designed the perfect system. Their knowledge could unlock unlimited potential.',\n    type: 'epic',\n    category: 'Investigation',\n    difficulty: 'Legendary',\n    status: 'locked',\n    icon: 'üèõÔ∏è',\n    \n    objectives: [\n      {\n        id: 'obj_006_1',\n        description: 'Gather the Five Sacred Design Patterns',\n        completed: false,\n        progress: 0,\n        maxProgress: 5\n      },\n      {\n        id: 'obj_006_2',\n        description: 'Decipher the Architect\\'s Code',\n        completed: false,\n        progress: 0,\n        maxProgress: 1\n      },\n      {\n        id: 'obj_006_3',\n        description: 'Build the Ultimate System',\n        completed: false,\n        progress: 0,\n        maxProgress: 1\n      }\n    ],\n    currentObjectiveIndex: 0,\n    progressPercentage: 0,\n    \n    requirements: {\n      minLevel: 20,\n      requiredClass: ['System Architect', 'Code Master'],\n      requiredQuests: ['quest_002', 'quest_003'],\n      requiredSkills: [\n        { skill: 'System Design', level: 10 },\n        { skill: 'Architecture Patterns', level: 10 }\n      ]\n    },\n    \n    rewards: {\n      xp: 5000,\n      gold: 5000,\n      items: ['Architect\\'s Crown', 'Legendary Blueprint', 'System Crystal'],\n      skillPoints: 10,\n      reputation: [\n        { faction: 'Master Builders', amount: 500 },\n        { faction: 'Guild Alliance', amount: 250 }\n      ],\n      unlocks: ['Master Architect Class', 'Legendary Quests']\n    },\n    \n    assignedAgents: [],\n    recommendedTeamSize: 8,\n    autoAssign: false,\n    dialogue: [],\n    \n    createdAt: new Date(),\n    repeatable: false\n  },\n  \n  // Training Quest\n  {\n    id: 'quest_007',\n    title: 'Skill Advancement Trial',\n    description: 'Push your agents to their limits in specialized training.',\n    type: 'side',\n    category: 'Training',\n    difficulty: 'Hard',\n    status: 'available',\n    icon: 'üéØ',\n    \n    objectives: [\n      {\n        id: 'obj_007_1',\n        description: 'Complete coding challenges',\n        completed: false,\n        progress: 0,\n        maxProgress: 10\n      },\n      {\n        id: 'obj_007_2',\n        description: 'Optimize existing solutions',\n        completed: false,\n        progress: 0,\n        maxProgress: 5\n      },\n      {\n        id: 'obj_007_3',\n        description: 'Mentor junior agents',\n        completed: false,\n        progress: 0,\n        maxProgress: 3\n      }\n    ],\n    currentObjectiveIndex: 0,\n    progressPercentage: 0,\n    timeLimit: 90,\n    \n    requirements: {\n      minLevel: 8,\n      teamSize: { min: 2, max: 4 }\n    },\n    \n    rewards: {\n      xp: 800,\n      skillPoints: 3,\n      items: ['Training Certificate', 'Skill Boost Elixir'],\n      reputation: [{ faction: 'Training Academy', amount: 60 }]\n    },\n    \n    assignedAgents: [],\n    recommendedTeamSize: 3,\n    autoAssign: false,\n    dialogue: [],\n    \n    createdAt: new Date(),\n    repeatable: true,\n    cooldownHours: 72\n  },\n  \n  // Diplomacy Quest\n  {\n    id: 'quest_008',\n    title: 'The Alliance Summit',\n    description: 'Negotiate partnerships with other agent guilds.',\n    type: 'main',\n    category: 'Diplomacy',\n    difficulty: 'Medium',\n    status: 'available',\n    icon: 'ü§ù',\n    \n    objectives: [\n      {\n        id: 'obj_008_1',\n        description: 'Prepare presentation materials',\n        completed: false,\n        progress: 0,\n        maxProgress: 1\n      },\n      {\n        id: 'obj_008_2',\n        description: 'Meet with guild representatives',\n        completed: false,\n        progress: 0,\n        maxProgress: 4\n      },\n      {\n        id: 'obj_008_3',\n        description: 'Negotiate terms',\n        completed: false,\n        progress: 0,\n        maxProgress: 3\n      },\n      {\n        id: 'obj_008_4',\n        description: 'Secure unanimous approval',\n        completed: false,\n        progress: 0,\n        maxProgress: 1,\n        optional: true\n      }\n    ],\n    currentObjectiveIndex: 0,\n    progressPercentage: 0,\n    \n    requirements: {\n      minLevel: 6,\n      requiredSkills: [\n        { skill: 'Communication', level: 4 },\n        { skill: 'Negotiation', level: 3 }\n      ]\n    },\n    \n    rewards: {\n      xp: 600,\n      gold: 400,\n      items: ['Diplomat Badge', 'Alliance Token'],\n      reputation: [\n        { faction: 'Guild Alliance', amount: 100 },\n        { faction: 'Diplomatic Corps', amount: 75 }\n      ],\n      unlocks: ['Alliance Quests', 'Trade Routes']\n    },\n    \n    bonusRewards: {\n      xp: 200,\n      items: ['Master Negotiator Seal'],\n      reputation: [{ faction: 'All Factions', amount: 25 }]\n    },\n    \n    assignedAgents: [],\n    recommendedTeamSize: 2,\n    autoAssign: false,\n    dialogue: [],\n    \n    createdAt: new Date(),\n    repeatable: false\n  }\n];\n\n// Quest chain data\nexport const questChains = [\n  {\n    id: 'chain_001',\n    name: 'The Path to Mastery',\n    description: 'Complete the journey from apprentice to master.',\n    quests: ['quest_001', 'quest_004', 'quest_007', 'quest_006'],\n    currentQuestIndex: 0,\n    completed: false,\n    finalReward: {\n      xp: 10000,\n      items: ['Master\\'s Insignia', 'Legendary Skill Crystal'],\n      skillPoints: 15,\n      unlocks: ['Grandmaster Trials']\n    }\n  }\n];\n\n// Quest templates for dynamic generation\nexport const questTemplates = {\n  daily: {\n    xpRange: [100, 200],\n    objectives: ['Review code', 'Fix bugs', 'Write tests', 'Update docs'],\n    categories: ['Creation', 'Investigation', 'Training']\n  },\n  side: {\n    xpRange: [200, 500],\n    objectives: ['Explore repository', 'Analyze patterns', 'Implement feature', 'Optimize performance'],\n    categories: ['Exploration', 'Creation', 'Combat']\n  },\n  main: {\n    xpRange: [500, 1500],\n    objectives: ['Investigate mystery', 'Gather evidence', 'Solve puzzle', 'Confront challenge'],\n    categories: ['Investigation', 'Combat', 'Diplomacy']\n  },\n  raid: {\n    xpRange: [1000, 3000],\n    objectives: ['Prepare team', 'Execute strategy', 'Overcome obstacles', 'Achieve victory'],\n    categories: ['Combat', 'Training']\n  },\n  epic: {\n    xpRange: [3000, 10000],\n    objectives: ['Uncover secrets', 'Master skills', 'Face trials', 'Claim destiny'],\n    categories: ['Investigation', 'Training', 'Combat']\n  }\n};","import { useState, useMemo } from 'react';\nimport { Quest, QuestType, Difficulty, QuestStatus, QuestFilter, QuestSortOptions } from '../types/quest';\nimport { Agent } from '../types/agent';\nimport { initialQuests } from '../data/quests';\n\ninterface QuestBoardProps {\n  agents: Agent[];\n  onQuestAssign: (questId: string, agentIds: number[]) => void;\n  onQuestStart: (questId: string) => void;\n  onQuestComplete: (questId: string) => void;\n}\n\nconst QuestBoard: React.FC<QuestBoardProps> = ({ agents, onQuestAssign, onQuestStart, onQuestComplete }) => {\n  const [quests, setQuests] = useState<Quest[]>(initialQuests);\n  const [selectedQuest, setSelectedQuest] = useState<Quest | null>(null);\n  const [selectedAgents, setSelectedAgents] = useState<number[]>([]);\n  const [filter, setFilter] = useState<QuestFilter>({});\n  const [sortOptions, setSortOptions] = useState<QuestSortOptions>({ by: 'difficulty', direction: 'asc' });\n  const [showDetails, setShowDetails] = useState(false);\n\n  // Filter and sort quests\n  const filteredQuests = useMemo(() => {\n    let filtered = [...quests];\n\n    // Apply filters\n    if (filter.type?.length) {\n      filtered = filtered.filter(q => filter.type!.includes(q.type));\n    }\n    if (filter.category?.length) {\n      filtered = filtered.filter(q => filter.category!.includes(q.category));\n    }\n    if (filter.difficulty?.length) {\n      filtered = filtered.filter(q => filter.difficulty!.includes(q.difficulty));\n    }\n    if (filter.status?.length) {\n      filtered = filtered.filter(q => filter.status!.includes(q.status));\n    }\n    if (filter.hideCompleted) {\n      filtered = filtered.filter(q => q.status !== 'completed');\n    }\n    if (filter.hideLocked) {\n      filtered = filtered.filter(q => q.status !== 'locked');\n    }\n    if (filter.minRewardXp) {\n      filtered = filtered.filter(q => q.rewards.xp >= filter.minRewardXp!);\n    }\n\n    // Sort\n    filtered.sort((a, b) => {\n      let comparison = 0;\n      switch (sortOptions.by) {\n        case 'difficulty': {\n          const diffOrder = ['Tutorial', 'Easy', 'Medium', 'Hard', 'Expert', 'Legendary'];\n          comparison = diffOrder.indexOf(a.difficulty) - diffOrder.indexOf(b.difficulty);\n          break;\n        }\n        case 'xp':\n          comparison = a.rewards.xp - b.rewards.xp;\n          break;\n        case 'progress':\n          comparison = a.progressPercentage - b.progressPercentage;\n          break;\n        case 'type':\n          comparison = a.type.localeCompare(b.type);\n          break;\n        case 'newest':\n          comparison = b.createdAt.getTime() - a.createdAt.getTime();\n          break;\n      }\n      return sortOptions.direction === 'asc' ? comparison : -comparison;\n    });\n\n    return filtered;\n  }, [quests, filter, sortOptions]);\n\n  const getDifficultyColor = (difficulty: Difficulty) => {\n    const colors = {\n      'Tutorial': 'text-gray-400',\n      'Easy': 'text-green-400',\n      'Medium': 'text-yellow-400',\n      'Hard': 'text-orange-400',\n      'Expert': 'text-red-400',\n      'Legendary': 'text-purple-400'\n    };\n    return colors[difficulty] || 'text-gray-400';\n  };\n\n  const getTypeColor = (type: QuestType) => {\n    const colors = {\n      'main': 'bg-blue-500/20 border-blue-400',\n      'side': 'bg-green-500/20 border-green-400',\n      'daily': 'bg-yellow-500/20 border-yellow-400',\n      'epic': 'bg-purple-500/20 border-purple-400',\n      'raid': 'bg-red-500/20 border-red-400'\n    };\n    return colors[type] || 'bg-gray-500/20 border-gray-400';\n  };\n\n  const getStatusIcon = (status: QuestStatus) => {\n    const icons = {\n      'available': '‚úì',\n      'active': '‚ö°',\n      'completed': '‚úì',\n      'failed': '‚úó',\n      'locked': 'üîí'\n    };\n    return icons[status] || '?';\n  };\n\n  const canStartQuest = (quest: Quest) => {\n    if (quest.status !== 'available') return false;\n    if (selectedAgents.length === 0) return false;\n    \n    // Check requirements\n    const req = quest.requirements;\n    if (req.teamSize) {\n      if (selectedAgents.length < req.teamSize.min || selectedAgents.length > req.teamSize.max) {\n        return false;\n      }\n    }\n    \n    // Check agent levels\n    if (req.minLevel) {\n      const lowestLevel = Math.min(...selectedAgents.map(id => \n        agents.find(a => a.id === id)?.level || 0\n      ));\n      if (lowestLevel < req.minLevel) return false;\n    }\n    \n    return true;\n  };\n\n  const handleAgentToggle = (agentId: number) => {\n    setSelectedAgents(prev => \n      prev.includes(agentId) \n        ? prev.filter(id => id !== agentId)\n        : [...prev, agentId]\n    );\n  };\n\n  const handleQuestStart = () => {\n    if (selectedQuest && canStartQuest(selectedQuest)) {\n      onQuestAssign(selectedQuest.id, selectedAgents);\n      onQuestStart(selectedQuest.id);\n      setQuests(prev => prev.map(q => \n        q.id === selectedQuest.id \n          ? { ...q, status: 'active' as QuestStatus, assignedAgents: selectedAgents }\n          : q\n      ));\n      setSelectedAgents([]);\n      setShowDetails(false);\n    }\n  };\n\n  const renderQuestCard = (quest: Quest) => (\n    <div\n      key={quest.id}\n      data-quest-id={quest.id}\n      className={`quest-card p-4 rounded-lg border-2 cursor-pointer transition-all hover:scale-105 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-offset-2 focus:ring-offset-slate-800 ${getTypeColor(quest.type)} ${\n        selectedQuest?.id === quest.id ? 'ring-2 ring-blue-400' : ''\n      }`}\n      onClick={() => {\n        setSelectedQuest(quest);\n        setShowDetails(true);\n      }}\n      onKeyDown={(e) => {\n        if (e.key === 'Enter' || e.key === ' ') {\n          e.preventDefault();\n          setSelectedQuest(quest);\n          setShowDetails(true);\n        }\n      }}\n      tabIndex={0}\n      aria-label={`View details for ${quest.title} quest`}\n    >\n      <div className=\"flex justify-between items-start mb-2\">\n        <div className=\"flex items-center gap-2\">\n          <span className=\"text-2xl\" role=\"img\" aria-label={`${quest.title} quest icon`}>{quest.icon}</span>\n          <div>\n            <h3 className=\"font-bold text-white\">{quest.title}</h3>\n            <div className=\"flex gap-2 text-xs\">\n              <span className={`px-2 py-1 rounded-full bg-black/30 ${getDifficultyColor(quest.difficulty)}`}>\n                {quest.difficulty}\n              </span>\n              <span className=\"px-2 py-1 rounded-full bg-black/30 text-gray-300\">\n                {quest.category}\n              </span>\n            </div>\n          </div>\n        </div>\n        <span className=\"text-lg\" role=\"img\" aria-label={`Quest status: ${quest.status}`}>{getStatusIcon(quest.status)}</span>\n      </div>\n      \n      <p className=\"text-sm text-gray-300 mb-2 line-clamp-2\">{quest.description}</p>\n      \n      <div className=\"flex justify-between items-end\">\n        <div className=\"text-xs text-gray-400\">\n          <div>üéØ {quest.objectives.length} objectives</div>\n          <div>üë• {quest.recommendedTeamSize} agents recommended</div>\n        </div>\n        <div className=\"text-right\">\n          <div className=\"text-yellow-400 font-bold\">+{quest.rewards.xp} XP</div>\n          {quest.rewards.gold && (\n            <div className=\"text-yellow-300 text-xs\">+{quest.rewards.gold} gold</div>\n          )}\n        </div>\n      </div>\n      \n      {quest.status === 'active' && (\n        <div className=\"mt-2\">\n          <div \n            className=\"w-full bg-black/30 rounded-full h-2\" \n            role=\"progressbar\" \n            aria-valuenow={quest.progressPercentage} \n            aria-valuemin={0} \n            aria-valuemax={100} \n            aria-label={`Quest progress: ${quest.progressPercentage}%`}\n          >\n            <div \n              className=\"h-2 bg-gradient-to-r from-blue-400 to-blue-600 rounded-full transition-all\"\n              role=\"progressbar\"\n              aria-valuenow={quest.progressPercentage}\n              aria-valuemin={0}\n              aria-valuemax={100}\n              aria-label={`${quest.title} progress`}\n              style={{ width: `${quest.progressPercentage}%` }}\n            />\n          </div>\n          <div className=\"text-xs text-center mt-1 text-gray-300\">\n            {quest.progressPercentage}% Complete\n          </div>\n          {quest.progressPercentage >= 100 && (\n            <button\n              className=\"w-full mt-2 px-2 py-1 bg-green-600 hover:bg-green-700 rounded text-xs transition-colors\"\n              onClick={(e) => {\n                e.stopPropagation();\n                onQuestComplete(quest.id);\n              }}\n              data-action=\"complete\"\n            >\n              Complete Quest\n            </button>\n          )}\n        </div>\n      )}\n      \n      {quest.timeLimit && quest.status === 'active' && (\n        <div className=\"mt-2 text-xs text-orange-400 text-center\">\n          ‚è±Ô∏è {quest.timeRemaining || quest.timeLimit} minutes remaining\n        </div>\n      )}\n    </div>\n  );\n\n  return (\n    <div className=\"quest-board p-6\">\n      {/* Header and Filters */}\n      <div className=\"mb-6\">\n        <h2 className=\"text-3xl font-bold mb-4 text-transparent bg-clip-text bg-gradient-to-r from-yellow-400 to-orange-500\">\n          Quest Board\n        </h2>\n        \n        <div className=\"flex flex-wrap gap-2 mb-4\">\n          {/* Type filters */}\n          <div className=\"flex gap-2\">\n            {(['main', 'side', 'daily', 'epic', 'raid'] as QuestType[]).map(type => (\n              <button\n                key={type}\n                className={`px-3 py-1 rounded-full text-xs transition-all ${\n                  filter.type?.includes(type)\n                    ? 'bg-blue-500 text-white'\n                    : 'bg-white/10 text-gray-300 hover:bg-white/20'\n                }`}\n                onClick={() => {\n                  setFilter(prev => ({\n                    ...prev,\n                    type: prev.type?.includes(type)\n                      ? prev.type.filter(t => t !== type)\n                      : [...(prev.type || []), type]\n                  }));\n                }}\n              >\n                {type}\n              </button>\n            ))}\n          </div>\n          \n          {/* Sort options */}\n          <select\n            className=\"px-3 py-1 rounded bg-white/10 text-white text-xs\"\n            value={sortOptions.by}\n            onChange={(e) => setSortOptions(prev => ({ ...prev, by: e.target.value as QuestSortOptions['by'] }))}\n          >\n            <option value=\"difficulty\">Sort by Difficulty</option>\n            <option value=\"xp\">Sort by XP</option>\n            <option value=\"progress\">Sort by Progress</option>\n            <option value=\"type\">Sort by Type</option>\n            <option value=\"newest\">Sort by Newest</option>\n          </select>\n          \n          <button\n            className=\"px-3 py-1 rounded bg-white/10 text-white text-xs hover:bg-white/20\"\n            onClick={() => setSortOptions(prev => ({ \n              ...prev, \n              direction: prev.direction === 'asc' ? 'desc' : 'asc' \n            }))}\n          >\n            {sortOptions.direction === 'asc' ? '‚Üë' : '‚Üì'}\n          </button>\n        </div>\n      </div>\n      \n      {/* Quest Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-6\">\n        {filteredQuests.map(quest => renderQuestCard(quest))}\n      </div>\n      \n      {/* Quest Details Modal */}\n      {showDetails && selectedQuest && (\n        <div className=\"fixed inset-0 bg-black/80 flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-gradient-to-br from-gray-900 to-black rounded-xl border border-white/20 max-w-4xl w-full max-h-[90vh] overflow-y-auto p-6\">\n            <div className=\"flex justify-between items-start mb-4\">\n              <div className=\"flex items-center gap-3\">\n                <span className=\"text-4xl\">{selectedQuest.icon}</span>\n                <div>\n                  <h2 className=\"text-2xl font-bold text-white\">{selectedQuest.title}</h2>\n                  <div className=\"flex gap-2 mt-1\">\n                    <span className={`px-2 py-1 rounded-full bg-black/30 text-sm ${getDifficultyColor(selectedQuest.difficulty)}`}>\n                      {selectedQuest.difficulty}\n                    </span>\n                    <span className=\"px-2 py-1 rounded-full bg-black/30 text-sm text-gray-300\">\n                      {selectedQuest.type} ‚Ä¢ {selectedQuest.category}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <button\n                className=\"text-gray-400 hover:text-white text-2xl\"\n                onClick={() => setShowDetails(false)}\n              >\n                ‚úï\n              </button>\n            </div>\n            \n            {selectedQuest.lore && (\n              <div className=\"mb-4 p-3 bg-white/5 rounded-lg italic text-gray-300\">\n                {selectedQuest.lore}\n              </div>\n            )}\n            \n            <p className=\"text-gray-300 mb-4\">{selectedQuest.description}</p>\n            \n            {/* Objectives */}\n            <div className=\"mb-4\">\n              <h3 className=\"font-bold text-lg mb-2 text-white\">Objectives</h3>\n              <div className=\"space-y-2\">\n                {selectedQuest.objectives.map((obj, idx) => (\n                  <div key={obj.id} className=\"flex items-center gap-3\">\n                    <div className={`w-6 h-6 rounded-full border-2 flex items-center justify-center text-xs ${\n                      obj.completed ? 'bg-green-500 border-green-400' : 'border-gray-500'\n                    }`}>\n                      {obj.completed ? '‚úì' : idx + 1}\n                    </div>\n                    <div className=\"flex-1\">\n                      <div className=\"text-sm text-gray-300\">\n                        {obj.description}\n                        {obj.optional && <span className=\"ml-2 text-xs text-blue-400\">(Optional)</span>}\n                      </div>\n                      {obj.maxProgress > 1 && (\n                        <div className=\"flex items-center gap-2 mt-1\">\n                          <div className=\"flex-1 bg-black/30 rounded-full h-1\">\n                            <div \n                              className=\"h-1 bg-blue-400 rounded-full\"\n                              style={{ width: `${(obj.progress / obj.maxProgress) * 100}%` }}\n                            />\n                          </div>\n                          <span className=\"text-xs text-gray-400\">\n                            {obj.progress}/{obj.maxProgress}\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n            \n            {/* Requirements */}\n            <div className=\"mb-4\">\n              <h3 className=\"font-bold text-lg mb-2 text-white\">Requirements</h3>\n              <div className=\"grid grid-cols-2 gap-4 text-sm text-gray-300\">\n                {selectedQuest.requirements.minLevel && (\n                  <div>üìä Min Level: {selectedQuest.requirements.minLevel}</div>\n                )}\n                {selectedQuest.requirements.teamSize && (\n                  <div>üë• Team Size: {selectedQuest.requirements.teamSize.min}-{selectedQuest.requirements.teamSize.max}</div>\n                )}\n                {selectedQuest.requirements.requiredClass && (\n                  <div>üé≠ Classes: {selectedQuest.requirements.requiredClass.join(', ')}</div>\n                )}\n                {selectedQuest.requirements.requiredSkills && (\n                  <div>üéØ Skills: {selectedQuest.requirements.requiredSkills.map(s => `${s.skill} (${s.level})`).join(', ')}</div>\n                )}\n              </div>\n            </div>\n            \n            {/* Rewards */}\n            <div className=\"mb-4\">\n              <h3 className=\"font-bold text-lg mb-2 text-white\">Rewards</h3>\n              <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                <div className=\"text-yellow-400\">‚≠ê {selectedQuest.rewards.xp} XP</div>\n                {selectedQuest.rewards.gold && (\n                  <div className=\"text-yellow-300\">üí∞ {selectedQuest.rewards.gold} Gold</div>\n                )}\n                {selectedQuest.rewards.items && (\n                  <div className=\"text-blue-400\">üì¶ {selectedQuest.rewards.items.join(', ')}</div>\n                )}\n                {selectedQuest.rewards.skillPoints && (\n                  <div className=\"text-purple-400\">üíé {selectedQuest.rewards.skillPoints} Skill Points</div>\n                )}\n              </div>\n              {selectedQuest.bonusRewards && (\n                <div className=\"mt-2 p-2 bg-white/5 rounded\">\n                  <div className=\"text-xs text-blue-400 mb-1\">Bonus Rewards (Optional Objectives):</div>\n                  <div className=\"text-xs text-gray-300\">\n                    +{selectedQuest.bonusRewards.xp} XP\n                    {selectedQuest.bonusRewards.items && `, ${selectedQuest.bonusRewards.items.join(', ')}`}\n                  </div>\n                </div>\n              )}\n            </div>\n            \n            {/* Agent Selection */}\n            {selectedQuest.status === 'available' && (\n              <div className=\"mb-4\">\n                <h3 className=\"font-bold text-lg mb-2 text-white\">Assign Agents</h3>\n                <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2 mb-3\">\n                  {agents.map(agent => (\n                    <button\n                      key={agent.id}\n                      className={`p-2 rounded-lg border transition-all ${\n                        selectedAgents.includes(agent.id)\n                          ? 'bg-blue-500/30 border-blue-400'\n                          : 'bg-white/5 border-white/20 hover:bg-white/10'\n                      }`}\n                      onClick={() => handleAgentToggle(agent.id)}\n                    >\n                      <div className=\"flex items-center gap-2\">\n                        <span className=\"text-2xl\" role=\"img\" aria-label={`${agent.name} avatar`}>{agent.avatar}</span>\n                        <div className=\"text-left\">\n                          <div className=\"text-xs font-bold text-white\">{agent.name}</div>\n                          <div className=\"text-xs text-gray-400\">Lv.{agent.level} {agent.class}</div>\n                        </div>\n                      </div>\n                    </button>\n                  ))}\n                </div>\n                <div className=\"text-xs text-gray-400\">\n                  Selected: {selectedAgents.length} / Recommended: {selectedQuest.recommendedTeamSize}\n                </div>\n              </div>\n            )}\n            \n            {/* Action Buttons */}\n            <div className=\"flex gap-3 justify-end\">\n              <button\n                className=\"px-4 py-2 rounded-lg bg-gray-600 hover:bg-gray-700 transition-colors\"\n                onClick={() => setShowDetails(false)}\n              >\n                Close\n              </button>\n              {selectedQuest.status === 'available' && (\n                <button\n                  className={`px-4 py-2 rounded-lg transition-colors ${\n                    canStartQuest(selectedQuest)\n                      ? 'bg-blue-600 hover:bg-blue-700'\n                      : 'bg-gray-700 cursor-not-allowed opacity-50'\n                  }`}\n                  onClick={handleQuestStart}\n                  disabled={!canStartQuest(selectedQuest)}\n                >\n                  Start Quest\n                </button>\n              )}\n              {selectedQuest.status === 'active' && selectedQuest.progressPercentage >= 100 && (\n                <button\n                  className=\"px-4 py-2 rounded-lg bg-green-600 hover:bg-green-700 transition-colors\"\n                  onClick={() => {\n                    onQuestComplete(selectedQuest.id);\n                    setQuests(prev => prev.map(q => \n                      q.id === selectedQuest.id \n                        ? { ...q, status: 'completed' as QuestStatus }\n                        : q\n                    ));\n                    setShowDetails(false);\n                  }}\n                >\n                  Complete Quest\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default QuestBoard;","// Level up notification component with animations for Agent Company RPG\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Agent } from '../types/agent';\nimport { LevelUpEvent, ProgressionNotification } from '../utils/levelProgression';\n\ninterface LevelUpNotificationProps {\n  agent: Agent;\n  levelUpEvent: LevelUpEvent;\n  onClose: () => void;\n  autoClose?: boolean;\n  duration?: number;\n}\n\ninterface NotificationToastProps {\n  notification: ProgressionNotification;\n  onDismiss: (id: string) => void;\n  style?: React.CSSProperties;\n}\n\nexport const LevelUpNotification: React.FC<LevelUpNotificationProps> = ({\n  agent,\n  levelUpEvent,\n  onClose,\n  autoClose = true,\n  duration = 5000\n}) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [showDetails, setShowDetails] = useState(false);\n  const [animationPhase, setAnimationPhase] = useState<'enter' | 'celebrate' | 'exit'>('enter');\n  const notificationRef = useRef<HTMLDivElement>(null);\n\n  const handleClose = useCallback(() => {\n    setAnimationPhase('exit');\n    setIsVisible(false);\n    setTimeout(onClose, 300);\n  }, [onClose]);\n\n  useEffect(() => {\n    // Entrance animation\n    const enterTimer = setTimeout(() => {\n      setIsVisible(true);\n      setAnimationPhase('celebrate');\n    }, 100);\n\n    // Celebration phase\n    const celebrateTimer = setTimeout(() => {\n      setShowDetails(true);\n    }, 800);\n\n    // Auto close\n    let autoCloseTimer: NodeJS.Timeout;\n    if (autoClose) {\n      autoCloseTimer = setTimeout(() => {\n        handleClose();\n      }, duration);\n    }\n\n    return () => {\n      clearTimeout(enterTimer);\n      clearTimeout(celebrateTimer);\n      if (autoCloseTimer) clearTimeout(autoCloseTimer);\n    };\n  }, [autoClose, duration, handleClose]);\n\n  const getAnimationClasses = () => {\n    const baseClasses = \"transform transition-all duration-500 ease-out\";\n    \n    switch (animationPhase) {\n      case 'enter':\n        return `${baseClasses} scale-95 opacity-0 translate-y-4`;\n      case 'celebrate':\n        return `${baseClasses} scale-100 opacity-100 translate-y-0 ${\n          isVisible ? 'animate-bounce' : ''\n        }`;\n      case 'exit':\n        return `${baseClasses} scale-95 opacity-0 translate-y-2`;\n      default:\n        return baseClasses;\n    }\n  };\n\n  const renderStatIncreases = () => {\n    if (!levelUpEvent.statIncreases?.length) return null;\n\n    return (\n      <div className=\"mt-4 space-y-2\">\n        <h4 className=\"text-sm font-semibold text-purple-300\">Stat Increases:</h4>\n        <div className=\"grid grid-cols-2 gap-2\">\n          {levelUpEvent.statIncreases.map((increase, index) => (\n            <div \n              key={index}\n              className=\"flex items-center space-x-2 bg-slate-700/50 rounded px-2 py-1\"\n            >\n              <div className=\"text-xs font-medium capitalize\">\n                {increase.stat.replace(/([A-Z])/g, ' $1').trim()}:\n              </div>\n              <div className=\"text-green-400 font-bold text-xs\">\n                +{increase.amount}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  const renderUnlockedSkills = () => {\n    if (!levelUpEvent.unlockedSkills?.length) return null;\n\n    return (\n      <div className=\"mt-4 space-y-2\">\n        <h4 className=\"text-sm font-semibold text-cyan-300\">New Skills Unlocked:</h4>\n        <div className=\"flex flex-wrap gap-2\">\n          {levelUpEvent.unlockedSkills.map((skill, index) => (\n            <span \n              key={index}\n              className=\"bg-gradient-to-r from-cyan-500/20 to-purple-500/20 border border-cyan-400/30 rounded-full px-3 py-1 text-xs font-medium text-cyan-300 animate-pulse\"\n            >\n              ‚ú® {skill}\n            </span>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/50 backdrop-blur-sm\">\n      <div \n        ref={notificationRef}\n        className={`${getAnimationClasses()} relative max-w-md w-full mx-4`}\n      >\n        {/* Glow effect */}\n        <div className=\"absolute inset-0 bg-gradient-to-r from-purple-500/20 to-cyan-500/20 rounded-2xl blur-xl scale-110\" />\n        \n        {/* Main notification */}\n        <div className=\"relative bg-slate-900 bg-opacity-95 border border-purple-500 border-opacity-30 rounded-2xl p-6 shadow-2xl\">\n          {/* Close button */}\n          <button \n            onClick={handleClose}\n            className=\"absolute top-4 right-4 text-slate-400 hover:text-white transition-colors\"\n          >\n            ‚úï\n          </button>\n\n          {/* Header */}\n          <div className=\"text-center mb-4\">\n            <div className=\"text-4xl mb-2 animate-bounce\">üéâ</div>\n            <h2 className=\"text-2xl font-bold bg-gradient-to-r from-purple-400 to-cyan-400 bg-clip-text text-transparent\">\n              Level Up!\n            </h2>\n            <p className=\"text-slate-300 text-sm mt-1\">\n              {agent?.name || 'Agent'} has reached level {levelUpEvent.newLevel}\n            </p>\n          </div>\n\n          {/* Agent info */}\n          <div className=\"flex items-center justify-center space-x-4 mb-4\">\n            <div className=\"text-3xl\">{agent?.avatar || 'üéØ'}</div>\n            <div className=\"text-center\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-2xl font-bold text-orange-400\">\n                  {levelUpEvent.oldLevel}\n                </span>\n                <span className=\"text-purple-400 animate-pulse\">‚Üí</span>\n                <span className=\"text-3xl font-bold text-yellow-400 animate-pulse\">\n                  {levelUpEvent.newLevel}\n                </span>\n              </div>\n              <div className=\"text-xs text-slate-400\">\n                +{levelUpEvent.xpGained} XP from {levelUpEvent.source}\n              </div>\n            </div>\n          </div>\n\n          {/* Progress bar animation */}\n          <div className=\"mb-4\">\n            <div className=\"bg-slate-700 rounded-full h-2 overflow-hidden\">\n              <div \n                className=\"bg-gradient-to-r from-purple-500 to-cyan-500 h-full rounded-full transition-all duration-2000 ease-out animate-pulse\"\n                style={{ width: '100%' }}\n              />\n            </div>\n          </div>\n\n          {/* Details section */}\n          {showDetails && (\n            <div className=\"space-y-3 animate-fade-in\">\n              {renderStatIncreases()}\n              {renderUnlockedSkills()}\n              \n              {/* Action buttons */}\n              <div className=\"mt-6 flex space-x-3\">\n                <button \n                  onClick={() => setShowDetails(!showDetails)}\n                  className=\"flex-1 bg-purple-600/20 border border-purple-500/30 hover:bg-purple-600/30 text-purple-300 rounded-lg px-4 py-2 text-sm font-medium transition-colors\"\n                >\n                  {showDetails ? 'Hide Details' : 'Show Details'}\n                </button>\n                <button \n                  onClick={handleClose}\n                  className=\"flex-1 bg-gradient-to-r from-purple-600 to-cyan-600 hover:from-purple-700 hover:to-cyan-700 text-white rounded-lg px-4 py-2 text-sm font-medium transition-all transform hover:scale-105\"\n                >\n                  Awesome!\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Particle effects */}\n        {animationPhase === 'celebrate' && (\n          <div className=\"absolute inset-0 pointer-events-none\">\n            {[...Array(12)].map((_, i) => (\n              <div\n                key={i}\n                className=\"absolute w-2 h-2 bg-yellow-400 rounded-full animate-ping\"\n                style={{\n                  left: `${20 + Math.random() * 60}%`,\n                  top: `${20 + Math.random() * 60}%`,\n                  animationDelay: `${Math.random() * 1000}ms`,\n                  animationDuration: '1500ms'\n                }}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport const NotificationToast: React.FC<NotificationToastProps> = ({\n  notification,\n  onDismiss,\n  style\n}) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [isExiting, setIsExiting] = useState(false);\n\n  const handleDismiss = useCallback(() => {\n    setIsExiting(true);\n    setTimeout(() => {\n      onDismiss(notification.id);\n    }, 300);\n  }, [onDismiss, notification.id]);\n\n  useEffect(() => {\n    setIsVisible(true);\n    \n    // Auto dismiss after duration\n    if (notification.duration) {\n      const timer = setTimeout(() => {\n        handleDismiss();\n      }, notification.duration);\n      return () => clearTimeout(timer);\n    }\n  }, [notification.duration, handleDismiss]);\n\n  const getTypeColors = () => {\n    switch (notification.type) {\n      case 'level_up':\n        return 'from-yellow-500/20 to-orange-500/20 border-yellow-400/30';\n      case 'skill_unlock':\n        return 'from-cyan-500/20 to-blue-500/20 border-cyan-400/30';\n      case 'achievement':\n        return 'from-purple-500/20 to-pink-500/20 border-purple-400/30';\n      case 'stat_boost':\n        return 'from-green-500/20 to-emerald-500/20 border-green-400/30';\n      default:\n        return 'from-slate-500/20 to-gray-500/20 border-slate-400/30';\n    }\n  };\n\n  const getPriorityIntensity = () => {\n    switch (notification.priority) {\n      case 'high':\n        return 'animate-pulse';\n      case 'medium':\n        return '';\n      case 'low':\n        return 'opacity-80';\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <div \n      className={`transform transition-all duration-300 ${\n        isVisible && !isExiting \n          ? 'translate-x-0 opacity-100 scale-100' \n          : 'translate-x-full opacity-0 scale-95'\n      }`}\n      style={style}\n    >\n      <div className={`bg-gradient-to-r ${getTypeColors()} backdrop-blur-sm border rounded-lg p-4 shadow-lg max-w-sm ${getPriorityIntensity()}`}>\n        <div className=\"flex items-start space-x-3\">\n          <div className=\"text-2xl flex-shrink-0\">\n            {notification.icon}\n          </div>\n          \n          <div className=\"flex-1 min-w-0\">\n            <h4 className=\"text-sm font-semibold text-white mb-1\">\n              {notification.title}\n            </h4>\n            <p className=\"text-xs text-slate-300\">\n              {notification.message}\n            </p>\n            \n            {/* Action buttons */}\n            {notification.actions && notification.actions.length > 0 && (\n              <div className=\"flex space-x-2 mt-2\">\n                {notification.actions.map((action, index) => (\n                  <button\n                    key={index}\n                    onClick={action.action}\n                    className=\"text-xs bg-white/10 hover:bg-white/20 border border-white/20 rounded px-2 py-1 transition-colors\"\n                  >\n                    {action.label}\n                  </button>\n                ))}\n              </div>\n            )}\n          </div>\n          \n          <button \n            onClick={handleDismiss}\n            className=\"text-slate-400 hover:text-white transition-colors flex-shrink-0\"\n          >\n            <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Container for multiple notifications\nexport const NotificationContainer: React.FC<{\n  notifications: ProgressionNotification[];\n  onDismiss: (id: string) => void;\n}> = ({ notifications, onDismiss }) => {\n  return (\n    <div className=\"fixed top-4 right-4 z-40 space-y-2 max-w-sm\">\n      {notifications\n        .filter(n => !n.dismissed)\n        .slice(0, 5) // Show max 5 notifications\n        .map((notification, index) => (\n          <NotificationToast\n            key={notification.id}\n            notification={notification}\n            onDismiss={onDismiss}\n            style={{\n              transform: `translateY(${index * 4}px)`,\n              zIndex: 40 - index\n            }}\n          />\n        ))}\n    </div>\n  );\n};\n\nexport default LevelUpNotification;"],"names":["jsxRuntimeModule","exports","REACT_ELEMENT_TYPE","Symbol","for","REACT_FRAGMENT_TYPE","jsxProd","type","config","maybeKey","key","propName","ref","$$typeof","props","reactJsxRuntime_production","Fragment","jsx","jsxs","require$$0","AgentSheet","agent","onClose","onMissionAssign","renderStatBar","value","max","color","safeBoundedValue","Math","min","isNaN","className","children","style","width","name","role","avatar","class","personality","onClick","tabIndex","label","stats","intelligence","creativity","reliability","speed","leadership","map","stat","safeValue","split","level","xp","xpToNext","id","specializations","spec","idx","currentMission","disabled","knowledgeBase","totalMemories","recentLearning","domains","knowledgeDomains","crawlingProgress","active","lastUrl","Object","entries","length","domain","replace","currentUrl","pagesLearned","renderKnowledgeBase","equipment","primary","secondary","utility","renderEquipment","skillTree","skillName","skill","maxLevel","recentProgress","filter","Boolean","renderSkillTree","relationships","rel","agentId","strength","recentInteraction","renderRelationships","realtimeActivity","activity","action","timestamp","xpGained","synergy","confidence","initialQuests","title","description","lore","category","difficulty","status","icon","objectives","completed","progress","maxProgress","currentObjectiveIndex","progressPercentage","requirements","minLevel","rewards","gold","items","unlocks","assignedAgents","recommendedTeamSize","autoAssign","dialogue","createdAt","Date","repeatable","optional","timeLimit","requiredClass","requiredSkills","skillPoints","reputation","faction","amount","bonusRewards","githubIssue","knowledgeRequired","teamSize","cooldownHours","swarmTaskId","requiredQuests","QuestBoard","agents","onQuestAssign","onQuestStart","onQuestComplete","quests","setQuests","useState","selectedQuest","setSelectedQuest","selectedAgents","setSelectedAgents","setFilter","sortOptions","setSortOptions","by","direction","showDetails","setShowDetails","filteredQuests","useMemo","filtered","q","includes","hideCompleted","hideLocked","minRewardXp","sort","a","b","comparison","diffOrder","indexOf","localeCompare","getTime","getDifficultyColor","Tutorial","Easy","Medium","Hard","Expert","Legendary","canStartQuest","quest","req","find","prev","t","onChange","e","target","main","side","daily","epic","raid","onKeyDown","preventDefault","available","failed","locked","stopPropagation","timeRemaining","renderQuestCard","obj","join","s","handleAgentToggle","LevelUpNotification","levelUpEvent","autoClose","duration","isVisible","setIsVisible","animationPhase","setAnimationPhase","notificationRef","useRef","handleClose","useCallback","setTimeout","useEffect","enterTimer","celebrateTimer","autoCloseTimer","clearTimeout","baseClasses","getAnimationClasses","newLevel","oldLevel","source","statIncreases","increase","index","trim","unlockedSkills","Array","_","i","left","random","top","animationDelay","animationDuration","NotificationToast","notification","onDismiss","isExiting","setIsExiting","handleDismiss","timer","getTypeColors","priority","getPriorityIntensity","message","actions","fill","viewBox","fillRule","d","clipRule","NotificationContainer","notifications","n","dismissed","slice","transform","zIndex"],"mappings":"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","x_google_ignoreList":[0,1]}